{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/loan-content.js","components/LoansList.js","pages/NotFoundPage.js","components/CommentsList.js","components/RatingsSection.js","components/AddCommentForm.js","pages/LoanPage.js","pages/LoansListPage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","AboutPage","loans","name","title","credit","currency","content","LoansList","map","loan","key","className","to","substring","NotFoundPage","CommentsList","comments","comment","username","text","RatingsSection","loanName","rating","setLoanInfo","rateArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","LoanPage","match","params","find","loanInfo","useEffect","console","log","fetchData","otherLoans","filter","paragraph","LoansListPage","NavBar","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.34c3a9dc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst HomePage = () => (\r\n  <>\r\n    <h1>Friend In Deed Group Loan App!</h1>\r\n    <p>\r\n      Apply for Crypto/Stable Coin credit as a <u>group</u> taking advantage of\r\n      the first of a kind Crypto-Co-Signer(s) feature!{\" \"}\r\n    </p>\r\n  </>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst AboutPage = () => (\r\n  <>\r\n    <h1>About Group Crypto Loan</h1>\r\n    <p>Simple Concept! Simpler process! Peer 2 Peer!</p>\r\n  </>\r\n);\r\n\r\nexport default AboutPage;\r\n","const loans = [\r\n  {\r\n    name: \"PL-Joey\",\r\n    title: \"3 member group loans @ 5.99 APR\",\r\n    credit: \"580-690\",\r\n    currency: \"BTC,ETH,USD\",\r\n    content: [\r\n      `Attractive loan offer.`,\r\n      `I'm a private lender.`,\r\n      `Low rates guaranteed!.`,\r\n    ],\r\n  },\r\n  {\r\n    name: \"Zensar-Credit\",\r\n    title: \"3 member group loans @ 6.99 APR\",\r\n    credit: \"680-710\",\r\n    currency: \"BTC,ETH,UMA\",\r\n    content: [\r\n      `Best rates guaranteed for eligible users.`,\r\n      `Zensar Credit's bonanza offer.`,\r\n      `Welcoming Group's of 3.`,\r\n    ],\r\n  },\r\n  {\r\n    name: \"PMC-Bank\",\r\n    title: \"6 member group loans @ 15.99 APR\",\r\n    credit: \">580\",\r\n    currency: \"BTC,ETH,USD\",\r\n    content: [\r\n      `Professionals in the lending industry.`,\r\n      `Comfortable deals in most stable coins.`,\r\n      `PMC Bank.`,\r\n    ],\r\n  },\r\n];\r\n\r\nexport default loans;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoansList = ({ loans }) => (\r\n  <>\r\n    {\" \"}\r\n    {loans.map((loan, key) => (\r\n      <Link className=\"article-list-item\" key={key} to={`/loan/${loan.name}`}>\r\n        <h3>{loan.title}</h3>\r\n        <p>{loan.content[0].substring(0, 50)}...</p>\r\n      </Link>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default LoansList;\r\n","import React from \"react\";\r\n\r\nconst NotFoundPage = () => <h1>404 Page Not Found!</h1>;\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\n\r\nconst CommentsList = ({ comments }) => (\r\n  <>\r\n    <h3>Comments:</h3>\r\n    {comments.map((comment, key) => (\r\n      <div className=\"comment\" key={key}>\r\n        <h4>{comment.username}</h4>\r\n        <p>{comment.text}</p>\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default CommentsList;\r\n","import React from \"react\";\r\n\r\nconst RatingsSection = ({ loanName, rating, setLoanInfo }) => {\r\n  const rateArticle = async () => {\r\n    const result = await fetch(`/api/loans/${loanName}/rating`, {\r\n      method: \"post\",\r\n    });\r\n    const body = await result.json();\r\n    setLoanInfo(body);\r\n  };\r\n  return (\r\n    <div id=\"upvotes-section\">\r\n      <button onClick={() => rateArticle()}>Add Rating</button>\r\n      <p>This post has been {rating} rating</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingsSection;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddCommentForm = ({ loanName, setLoanInfo }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [commentText, setCommentText] = useState(\"\");\r\n\r\n  const addComment = async () => {\r\n    const result = await fetch(`/api/loans/${loanName}/add-comment`, {\r\n      method: \"post\",\r\n      body: JSON.stringify({ username, text: commentText }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const body = await result.json();\r\n    setLoanInfo(body);\r\n    setUsername(\"\");\r\n    setCommentText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-comment-form\">\r\n      <h3>Add a Comment</h3>\r\n      <label>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(event) => setUsername(event.target.value)}\r\n        />\r\n      </label>\r\n      <label>\r\n        Comment:\r\n        <textarea\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          value={commentText}\r\n          onChange={(event) => setCommentText(event.target.value)}\r\n        />\r\n      </label>\r\n      <button onClick={() => addComment()}>Add Comment</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport loans from \"./loan-content\";\r\nimport LoansList from \"../components/LoansList\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport CommentsList from \"../components/CommentsList\";\r\nimport RatingsSection from \"../components/RatingsSection\";\r\nimport AddCommentForm from \"../components/AddCommentForm\";\r\n\r\nconst LoanPage = ({ match }) => {\r\n  const name = match.params.name;\r\n  const loan = loans.find((loan) => loan.name === name);\r\n\r\n  const [loanInfo, setLoanInfo] = useState({ rating: 0, comments: [] });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await fetch(`/api/loans/${name}`);\r\n      const body = await result.json();\r\n      console.log(body);\r\n      setLoanInfo(body);\r\n    };\r\n    fetchData();\r\n  }, [name]);\r\n  if (!loan) return <NotFoundPage />;\r\n\r\n  const otherLoans = loans.filter((loan) => loan.name !== name);\r\n  return (\r\n    <>\r\n      <h1>Loan Listings</h1>\r\n      <h2>Creditor: {loan.name}</h2>\r\n      <h2>{loan.title}</h2>\r\n      <RatingsSection\r\n        loanName={name}\r\n        rating={loanInfo.rating}\r\n        setLoanInfo={setLoanInfo}\r\n      />\r\n      <p>This loan offer has been rated as {loanInfo.rating} times!</p>\r\n      <h3>Credit Score Range: {loan.credit}</h3>\r\n      <h3>Currency: {loan.currency}</h3>\r\n\r\n      {loan.content.map((paragraph, key) => (\r\n        <p key={key}>{paragraph}</p>\r\n      ))}\r\n      <CommentsList comments={loanInfo.comments} />\r\n      <AddCommentForm loanName={name} setLoanInfo={setLoanInfo} />\r\n      <h3>\r\n        <i>Related Loan Offers:</i>\r\n      </h3>\r\n      <LoansList loans={otherLoans} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoanPage;\r\n","import React from \"react\";\r\nimport loans from \"./loan-content\";\r\nimport LoansList from \"../components/LoansList\";\r\n\r\nconst LoansListPage = () => (\r\n  <>\r\n    <h1>Loans List</h1>\r\n    <p>\r\n      Apply for Crypto/Stable Coin credit as a <b>group</b> taking advantage of\r\n      the first of a kind Crypto P2P lending feature!\r\n    </p>\r\n    <LoansList loans={loans} />\r\n  </>\r\n);\r\n\r\nexport default LoansListPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => (\r\n  <nav>\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/about\">About</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/loans-list\">Loans</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport LoanPage from \"./pages/LoanPage\";\nimport LoansListPage from \"./pages/LoansListPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\n\nimport NavBar from \"./NavBar\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div id=\"page-body\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/loans-list\" component={LoansListPage} />\n            <Route path=\"/loan/:name\" component={LoanPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"whatwg-fetch\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}